name: Start a Zeebe test in Testbench

on:
  workflow_call:
    inputs:
      variables:
        description: 'Process instance variables'
        required: true
        type: string
      processId:
        description: 'Id of process to start in testbench (eg:- e2e-testbench-protocol)'
        required: true
        type: string
      branch:
        description: 'Branch to test'
        required: true
        type: string

jobs:
  testbench:
    name: Start a test in testbench
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@v3.0.0
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          secrets: |
            secret/data/products/zeebe/ci/zeebe ARTIFACTS_PSW;
            secret/data/products/zeebe/ci/zeebe ARTIFACTS_USR;
            secret/data/products/zeebe/ci/zeebe REGISTRY_HUB_DOCKER_COM_PSW_READ_ONLY;
            secret/data/products/zeebe/ci/zeebe REGISTRY_HUB_DOCKER_COM_USR;
            secret/data/products/zeebe/ci/zeebe TESTBENCH_PROD_CLIENT_SECRET;
            secret/data/products/zeebe/ci/zeebe TESTBENCH_PROD_CONTACT_POINT;
      - uses: google-github-actions/auth@v2
        id: auth
        with:
          token_format: 'access_token'
          workload_identity_provider: 'projects/628707732411/locations/global/workloadIdentityPools/zeebe-gh-actions/providers/gha-provider'
          service_account: 'zeebe-gh-actions@zeebe-io.iam.gserviceaccount.com'
      - name: Setup BuildKit
        uses: docker/setup-buildx-action@v3
      - name: Login to GCR
        uses: docker/login-action@v3
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
      # Logging to DockerHub to to avoid being rate-limited when using an anonymous account from GitHub-managed runners.
      # jib-maven-plugin uses eclipse-temurin:xx image from DockerHub as base.
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ steps.secrets.outputs.REGISTRY_HUB_DOCKER_COM_USR }}
          password: ${{ steps.secrets.outputs.REGISTRY_HUB_DOCKER_COM_PSW_READ_ONLY }}
      - uses: ./.github/actions/setup-build
        with:
          camunda-nexus-username: ${{ steps.secrets.outputs.ARTIFACTS_USR }}
          camunda-nexus-password: ${{ steps.secrets.outputs.ARTIFACTS_PSW }}
      - id: image-tag
        name: Calculate image tag
        shell: bash
        run: |
          # Replace dots and slashes with dashes
          branch=${BRANCH/[\/\.]/-}
          version=$(./mvnw help:evaluate -q -DforceStdout -D"expression=project.version")
          echo "image-tag=$version-$branch-${GITHUB_SHA::8}" >> $GITHUB_OUTPUT
        env:
          BRANCH: ${{ inputs.branch }}
      - uses: ./.github/actions/build-zeebe
        id: build-zeebe
      - uses: ./.github/actions/build-platform-docker
        id: build-zeebe-docker
        with:
          repository: gcr.io/zeebe-io/zeebe
          version: ${{ steps.image-tag.outputs.image-tag }}
          push: true
          distball: ${{ steps.build-zeebe.outputs.distball }}
      - name: Build and Push Starter Image
        run: ./mvnw -pl zeebe/benchmarks/project jib:build -P starter -D image="gcr.io/zeebe-io/starter:${{ steps.image-tag.outputs.image-tag }}"
      - name: Build and Push Worker Image
        run: ./mvnw -pl zeebe/benchmarks/project jib:build -P worker -D image="gcr.io/zeebe-io/worker:${{ steps.image-tag.outputs.image-tag }}"
      - name: Start Test
        shell: bash
        run: |
          curl -LO https://github.com/camunda/camunda/releases/download/8.5.7/zbctl
          chmod +x zbctl
          variables=$(echo "${{ inputs.variables }}" | envsubst)
          ./zbctl create instance ${{ inputs.processId }} --variables "$variables"
        env:
          IMAGE: ${{ steps.build-zeebe-docker.outputs.image }}
          ZEEBE_CLIENT_SECRET: ${{ steps.secrets.outputs.TESTBENCH_PROD_CLIENT_SECRET }}
          ZEEBE_ADDRESS: ${{ steps.secrets.outputs.TESTBENCH_PROD_CONTACT_POINT }}
          ZEEBE_AUTHORIZATION_SERVER_URL: 'https://login.cloud.camunda.io/oauth/token'
          ZEEBE_CLIENT_ID: 'Jg9caDRuAWHchvM7JiaVlndL-qVFfp~0'
